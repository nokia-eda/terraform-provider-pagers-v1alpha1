{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.pagers.v1alpha1.ClusterPager": {
        "description": "ClusterPager is the Schema for the clusterpagers API",
        "properties": {
          "apiVersion": {
            "default": "pagers.eda.nokia.com/v1alpha1",
            "pattern": "^pagers\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to pagers.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterPager",
            "pattern": "^ClusterPager$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterPager",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager_metadata"
          },
          "spec": {
            "description": "ClusterPagerSpec defines the desired state of ClusterPager",
            "properties": {
              "description": {
                "description": "The pager description",
                "title": "Description",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 50
                }
              },
              "routingKeySecret": {
                "description": "A reference to the Secret holding the Pager Duty routing key to use when raising events from this pager.\nThe routing key must be base64 encoded and set under data.key.\nThe secret reference follows the format `$namespace/$secretName`, if the namespace is omitted, the pager namespace is used.",
                "title": "Routing Key Secret",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "sources": {
                "description": "Set the Pager sources",
                "properties": {
                  "alarms": {
                    "description": "Include alarm sources in this pager",
                    "properties": {
                      "autoResolve": {
                        "description": "If true this app will automatically change the event status from triggered to resolved when the alarm is cleared.",
                        "title": "Auto Resolve",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 300
                        }
                      },
                      "exclude": {
                        "description": "A list of alarms that this Pager will ignore, matching the 'type' field within alarms.\nIf a source matches both the 'includes' and 'excludes' lists, it will be excluded.\nFor example, 'InterfaceMemberDown'.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Exclude",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 250,
                          "ui-single-line-group": "Include_Exclude"
                        }
                      },
                      "include": {
                        "description": "A list of alarms that this Pager will listen to, matching the 'type' field within alarms.\nFor example, 'InterfaceDown'.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Include",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 250,
                          "ui-single-line-group": "Include_Exclude"
                        }
                      },
                      "namespaces": {
                        "description": "Namespaces to consider when selecting alarms for this Pager.\nAlarms from these namespaces will be either included or excluded based on the other filters.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Namespaces",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 210
                        }
                      }
                    },
                    "title": "Alarms",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 200
                    }
                  },
                  "query": {
                    "description": "Include a query source in this pager",
                    "properties": {
                      "autoResolve": {
                        "description": "If true this app will automatically change the event status from triggered to resolved when the object is deleted.",
                        "title": "Auto Resolve",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 600
                        }
                      },
                      "class": {
                        "description": "A template to use as class when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.",
                        "title": "Class",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 900
                        }
                      },
                      "component": {
                        "description": "A template to use as component when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.",
                        "title": "Component",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 800
                        }
                      },
                      "fields": {
                        "description": "Fields to include in the subscribe results, which can then be used in the template,\ne.g. '.node.name' or '.node.srl.interface.name\"'.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Fields",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 550
                        }
                      },
                      "group": {
                        "description": "A template to use as group when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.",
                        "title": "Group",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 850
                        }
                      },
                      "includeDetails": {
                        "description": "If true the query response is included in the generated event 'custom_details' field",
                        "title": "Include Details",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 950
                        }
                      },
                      "severity": {
                        "description": "A template to use as severity when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.\nMust be one of critical , error , warning  or info.",
                        "title": "Severity",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 750
                        }
                      },
                      "source": {
                        "description": "A template to use as source when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.",
                        "title": "Source",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 700
                        }
                      },
                      "summary": {
                        "description": "A template to use as summary when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.\ne.g. 'Interface {{.node.srl.interface.name}} is down on node {{.node.name}}'.",
                        "title": "Summary",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 650
                        }
                      },
                      "table": {
                        "description": "EDB table to subscribe to. e.g. '.namespace.node.srl.interface'",
                        "title": "Table",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 450
                        }
                      },
                      "where": {
                        "description": "A where clause to use for the subscribe request, e.g: 'oper-state = down'. You can omit enclosing parentheses.",
                        "title": "Where",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 500
                        }
                      }
                    },
                    "title": "Query",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 400
                    }
                  }
                },
                "title": "Sources",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 150
                }
              }
            },
            "required": [
              "routingKeySecret",
              "sources"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ClusterPagerStatus defines the observed state of ClusterPager",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.pagers.v1alpha1.ClusterPagerList": {
        "description": "ClusterPagerList is a list of clusterpagers",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.pagers.v1alpha1.ClusterPager_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.pagers.v1alpha1.ClusterPager_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.pagers.v1alpha1.ClusterPager_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "pagers.eda.nokia.com",
                  "kind": "ClusterPager",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.pagers.v1alpha1.Pager": {
        "description": "Pager is the Schema for the pagers API",
        "properties": {
          "apiVersion": {
            "default": "pagers.eda.nokia.com/v1alpha1",
            "pattern": "^pagers\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to pagers.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Pager",
            "pattern": "^Pager$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Pager",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager_metadata"
          },
          "spec": {
            "description": "PagerSpec defines the desired state of Pager",
            "properties": {
              "description": {
                "description": "The pager description",
                "title": "Description",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 50
                }
              },
              "routingKeySecret": {
                "description": "A reference to the Secret holding the Pager Duty routing key to use when raising events from this pager.\nThe routing key must be base64 encoded and set under data.key.\nThe secret reference follows the format `$namespace/$secretName`, if the namespace is omitted, the pager namespace is used.",
                "title": "Routing Key Secret",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "sources": {
                "description": "Set the Pager sources",
                "properties": {
                  "alarms": {
                    "description": "Include alarm sources in this pager",
                    "properties": {
                      "autoResolve": {
                        "description": "If true this app will automatically change the event status from triggered to resolved when the alarm is cleared.",
                        "title": "Auto Resolve",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 300
                        }
                      },
                      "exclude": {
                        "description": "A list of alarms that this Pager will ignore, matching the 'type' field within alarms.\nIf a source matches both the 'includes' and 'excludes' lists, it will be excluded.\nFor example, 'InterfaceMemberDown'.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Exclude",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 250,
                          "ui-single-line-group": "Include_Exclude"
                        }
                      },
                      "include": {
                        "description": "A list of alarms that this Pager will listen to, matching the 'type' field within alarms.\nFor example, 'InterfaceDown'.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Include",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 250,
                          "ui-single-line-group": "Include_Exclude"
                        }
                      }
                    },
                    "title": "Alarms",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 200
                    }
                  },
                  "query": {
                    "description": "Include a query source in this pager",
                    "properties": {
                      "autoResolve": {
                        "description": "If true this app will automatically change the event status from triggered to resolved when the object is deleted.",
                        "title": "Auto Resolve",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 600
                        }
                      },
                      "class": {
                        "description": "A template to use as class when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.",
                        "title": "Class",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 900
                        }
                      },
                      "component": {
                        "description": "A template to use as component when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.",
                        "title": "Component",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 800
                        }
                      },
                      "fields": {
                        "description": "Fields to include in the subscribe results, which can then be used in the template,\ne.g. '.node.name' or '.node.srl.interface.name\"'.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Fields",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 550
                        }
                      },
                      "group": {
                        "description": "A template to use as group when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.",
                        "title": "Group",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 850
                        }
                      },
                      "includeDetails": {
                        "description": "If true the query response is included in the generated event 'custom_details' field",
                        "title": "Include Details",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 950
                        }
                      },
                      "severity": {
                        "description": "A template to use as severity when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.\nMust be one of critical , error , warning  or info.",
                        "title": "Severity",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 750
                        }
                      },
                      "source": {
                        "description": "A template to use as source when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.",
                        "title": "Source",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 700
                        }
                      },
                      "summary": {
                        "description": "A template to use as summary when sending the event to Pager Duty.\nThe template can use the fields from the subscription results.\ne.g. 'Interface {{.node.srl.interface.name}} is down on node {{.node.name}}'.",
                        "title": "Summary",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 650
                        }
                      },
                      "table": {
                        "description": "EDB table to subscribe to. e.g. '.namespace.node.srl.interface'",
                        "title": "Table",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 450
                        }
                      },
                      "where": {
                        "description": "A where clause to use for the subscribe request, e.g: 'oper-state = down'. You can omit enclosing parentheses.",
                        "title": "Where",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 500
                        }
                      }
                    },
                    "title": "Query",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 400
                    }
                  }
                },
                "title": "Sources",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 150
                }
              }
            },
            "required": [
              "routingKeySecret",
              "sources"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "PagerStatus defines the observed state of Pager",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.pagers.v1alpha1.PagerList": {
        "description": "PagerList is a list of pagers",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.pagers.v1alpha1.Pager_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.pagers.v1alpha1.Pager_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.pagers.v1alpha1.Pager_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "pagers.eda.nokia.com",
                  "kind": "Pager",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Pager Duty Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/pagers.eda.nokia.com": {
      "get": {
        "description": "list versions available from pagers.eda.nokia.com",
        "operationId": "getVersionPagersEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from pagers.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesPagersEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for pagers.eda.nokia.com v1alpha1",
        "operationId": "uiPagersEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/clusterpagers": {
      "delete": {
        "description": "Delete all instances of ClusterPager.  If ClusterPager is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterPager, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllPagersEdaNokiaComV1alpha1Clusterpagers",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPagerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listPagersEdaNokiaComV1alpha1Clusterpagers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPagerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clusterpagers",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterPager",
        "operationId": "createPagersEdaNokiaComV1alpha1Clusterpagers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/clusterpagers/_deleted": {
      "get": {
        "operationId": "getDeletedPagersEdaNokiaComV1alpha1Clusterpagers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterPager that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/clusterpagers/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterPager",
        "operationId": "deletePagersEdaNokiaComV1alpha1Clusterpagers",
        "parameters": [
          {
            "description": "name of the ClusterPager to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterPager.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readPagersEdaNokiaComV1alpha1Clusterpagers",
        "parameters": [
          {
            "description": "name of the ClusterPager",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterPager",
        "operationId": "patchPagersEdaNokiaComV1alpha1Clusterpagers",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterPager",
        "operationId": "replacePagersEdaNokiaComV1alpha1Clusterpagers",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.ClusterPager"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/clusterpagers/{name}/_revs": {
      "get": {
        "operationId": "getHistoryPagersEdaNokiaComV1alpha1Clusterpagers",
        "parameters": [
          {
            "description": "name of the ClusterPager to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterPager.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/clusterpagers/{name}/_topology": {
      "get": {
        "operationId": "getTopologyPagersEdaNokiaComV1alpha1Clusterpagers",
        "parameters": [
          {
            "description": "name of the ClusterPager to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterPager.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/namespaces/{namespace}/pagers": {
      "delete": {
        "operationId": "deleteAllPagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.PagerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Pager in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listPagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.PagerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list pagers in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Pager",
        "operationId": "createPagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/namespaces/{namespace}/pagers/_deleted": {
      "get": {
        "operationId": "getDeletedPagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Pager that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/namespaces/{namespace}/pagers/{name}": {
      "delete": {
        "description": "delete the specified Pager",
        "operationId": "deletePagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Pager to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Pager.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readPagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "description": "name of the Pager",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Pager",
        "operationId": "patchPagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Pager",
        "operationId": "replacePagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.Pager"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/namespaces/{namespace}/pagers/{name}/_revs": {
      "get": {
        "operationId": "getHistoryPagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "description": "name of the Pager to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Pager.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/namespaces/{namespace}/pagers/{name}/_topology": {
      "get": {
        "operationId": "getTopologyPagersEdaNokiaComV1alpha1NamespacePagers",
        "parameters": [
          {
            "description": "name of the Pager to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Pager.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/pagers.eda.nokia.com/v1alpha1/pagers": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listPagersEdaNokiaComV1alpha1Pagers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.pagers.v1alpha1.PagerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list pagers",
        "tags": [
          "apps"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}